// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native"]
}

// --------------------------------------

model User {
  id             Int       @id @default(autoincrement())
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  name           String
  ghusername     String?
  ghuserid       Int?      @unique
  email          String    @unique
  hashedPassword String?
  role           String    @default("USER")
  picture        String?
  tokens         Token[]
  sessions       Session[]
  projects       Project[]
  Github_Repo    GhRepo[]
}

model GhRepo {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  url       String
  ghrepoid  Int      @unique
  owner     User     @relation(fields: [ownerId], references: [id])
  projectId Int?
  project   Project? @relation(fields: [projectId], references: [id])
  ownerId   Int
  private   Boolean
}

model Session {
  id                 Int       @id @default(autoincrement())
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  expiresAt          DateTime?
  handle             String    @unique
  hashedSessionToken String?
  antiCSRFToken      String?
  publicData         String?
  privateData        String?

  user   User? @relation(fields: [userId], references: [id])
  userId Int?
}

model Token {
  id          Int       @id @default(autoincrement())
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  hashedToken String
  // type        String
  // See note below about TokenType enum
  type        TokenType
  expiresAt   DateTime
  sentTo      String

  user   User @relation(fields: [userId], references: [id])
  userId Int

  @@unique([hashedToken, type])
}

enum TokenType {
  RESET_PASSWORD
}

model Deployment {
  id         Int      @id @default(autoincrement())
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  name       String
  production Boolean
  logs       String[]
  domain     String
  sha        String
  project    Project  @relation(fields: [projectId], references: [id])
  projectId  Int
}

model Project {
  id          Int          @id @default(autoincrement())
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  name        String
  lang        String
  commands    String[]
  user        User         @relation(fields: [userId], references: [id])
  userId      Int
  Deployments Deployment[]
  GhRepo      GhRepo?
  mainBranch  String
}
