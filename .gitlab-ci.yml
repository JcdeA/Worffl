# You can override the included template(s) by including variable overrides
# See https://docs.gitlab.com/ee/user/application_security/sast/#customizing-the-sast-settings
# Note that environment variables can be set in several places
# See https://docs.gitlab.com/ee/ci/variables/#priority-of-environment-variables
stages:
- build-app
- build-image
- deploy


build app:
  image: registry.jcde.xyz/sirius/sirius-images/builder:latest
  stage: build-app

  script:
   - export SKIP_GENERATE="true"
   - yarn --frozen-lockfile --production
   - rm -rf /root/.cache/prisma
   - yarn blitz prisma generate
   - yarn build

  cache:
    paths:
    - node_modules
    - ".blitz"
    - ".next"

  artifacts:
    paths:
    - ".blitz/"
    - ".next/"
    expire_in: 2 day



build image:
  stage: build-image

  artifacts:
    paths:
    - ".blitz/"
    - ".next/"

  image: "${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/docker:latest"

  services:
  - "docker:dind"

  script:
  - docker info
  - echo $CI_REGISTRY_PASSWORD | docker login --username $CI_REGISTRY_USER $CI_REGISTRY
    --password-stdin
  - docker pull $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG || docker pull $CI_REGISTRY_IMAGE:main
    || true
  - docker build -t $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA --cache-from=$CI_REGISTRY_IMAGE:$CI_BUILD_REF_NAME --cache-from=$CI_REGISTRY_IMAGE:main --shm-size 1G --build-arg GITHUB_CLIENT_ID="$GITHUB_CLIENT_ID" --build-arg  GITHUB_CLIENT_SECRET="$GITHUB_CLIENT_SECRET"  --build-arg GITHUB_WEBHOOK_SECRET="$GITHUB_WEBHOOK_SECRET"  --build-arg  DATABASE_URL="$DATABASE_URL"  --build-arg  SESSION_SECRET_KEY="$SESSION_SECRET_KEY"  --build-arg  GITHUB_PRIVATE_KEY="$GITHUB_PRIVATE_KEY"  .

  - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
  - docker tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG



deploy to production:
  image: "${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/alpine:latest"

  stage: deploy

  tags:
  - deployment

  script:
  - chmod og= $ID_RSA
  - export PROJECT_PATH=$(echo $CI_PROJECT_PATH | tr '/' _)
  - apk update && apk add openssh-client
  - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY"
  - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker pull $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG"
  - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker container rm -f $PROJECT_PATH || true"
  - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker run -d -p 3002:5000 --restart always --name $PROJECT_PATH $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG"
  
  environment:
    name: production
    url: https://dply.jcde.xyz

  only:
  - master



